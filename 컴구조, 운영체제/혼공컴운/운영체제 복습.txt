운영체제 복습

os = 프로세스관리, 시스템 자원을 관리하는 매우큰 프로그램, 컴퓨터에서 응용어플리케이션을 실행하기 위한 기본 핵심 프로그램

메모리 공간의 kernel space에 존재한다

os의 핵심 서비스를 커널이라 한다
유저 인터페이스는 운영체제의 서비스지만 커널은 아니다

cpu의 실행 모드 커널모드, 유저모드
유저 어플리케이션이 하드웨어 자원에 접근하기위해 (커널 코드를 실행하기 위해) 시스템콜을 하면 커널모드로 전환되고 커널코드를 실행할 수 있다

커널모드와 유저모드가 있는 이유는 시스템을 보호하기 위해서이다. 응용 프로그램이 무분별하게 하드웨어에 접근하지 못하도록 한다.

---
프로세스

프로세스를 생성한다 = 프로그램이 실행중이다 = 메모리에 프로그램이 올라왔다

프로세스를 생성하면 커널영역에 PCB를 생성한다, 프로세스가 삭제되면(메모리에서 삭제되면) Pcb도 삭제된다

프로세스 상태 다이어그램
생성 -> ready -> running -> 종료
		대기
		

프로세스의 계층
프로세스는 부모프로세스가 자식프로세스를 생성하는 계층적 구조를 갖는다
시스템콜중 fork를 통해 자기자신의 프로세스를 복사한 후 (메모리에 PID는 다르지만 통째로 복사된다)
exec를 호출해서 자식 프로세스의 정보로 덮어쓴다

최초의 프로세스 -> 로그인 프로세스 생성 -> shell 프로세스 생성 -> VIM 프로그램 실행 ..
이런식으로 프로세스를 만든다

---

가상메모리 = RAM 과 보조기억장치를 하나의 논리 메모리로 추상화 하여 사용하기 , 외부단편화 현상과 메모리보다 큰 프로세스를 실행하지 못하는 문제를 해결하였다

외부단편화 현상 = 연속 메모리 할당시 프로세스를 할당하기엔 공간이 작은 여러 공간이 많이 생겨 메모리가 낭비되는 현상, 문제

페이지단위로 가상 메모리를 나누고 프레임 단위로 실제 메모리를 나눠서 페이지를 프레임에 할당한다

쓰이지 않는 페이지를 보조기억장치로 옮기기 = 페이지 아웃
보조기억장치에서 가져오기 = 페이지 인

페이지와 프레임의 매핑정보를 페이지테이블에 저장한다
이 페이지 테이블도 메모리에 저장된다
PCB에 페이지테이블의 주소가 저장된다

페이지테이블도 크기가 크기 때문에 페이지 테이블을 나눠서 안쓰이는 페이지테이블을 보조기억장치에 넣고 필요할때 가져온다